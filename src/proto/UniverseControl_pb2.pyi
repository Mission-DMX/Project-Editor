"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Universe(google.protobuf.message.Message):
    """
    This file specifies messages used for manual universe routing.

    This will update or configure a new universe (based on the id) if send to fish
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class ArtNet(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        IP_ADDRESS_FIELD_NUMBER: builtins.int
        PORT_FIELD_NUMBER: builtins.int
        UNIVERSE_ON_DEVICE_FIELD_NUMBER: builtins.int
        ip_address: builtins.str
        port: builtins.int
        universe_on_device: builtins.int
        def __init__(
            self,
            *,
            ip_address: builtins.str = ...,
            port: builtins.int = ...,
            universe_on_device: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["ip_address", b"ip_address", "port", b"port", "universe_on_device", b"universe_on_device"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    PHYSICAL_LOCATION_FIELD_NUMBER: builtins.int
    REMOTE_LOCATION_FIELD_NUMBER: builtins.int
    id: builtins.int
    physical_location: builtins.int
    @property
    def remote_location(self) -> global___Universe.ArtNet: ...
    def __init__(
        self,
        *,
        id: builtins.int = ...,
        physical_location: builtins.int = ...,
        remote_location: global___Universe.ArtNet | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["Location", b"Location", "physical_location", b"physical_location", "remote_location", b"remote_location"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["Location", b"Location", "id", b"id", "physical_location", b"physical_location", "remote_location", b"remote_location"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["Location", b"Location"]) -> typing_extensions.Literal["physical_location", "remote_location"] | None: ...

global___Universe = Universe

@typing_extensions.final
class universes_list(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LIST_OF_UNIVERSES_FIELD_NUMBER: builtins.int
    @property
    def list_of_universes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Universe]: ...
    def __init__(
        self,
        *,
        list_of_universes: collections.abc.Iterable[global___Universe] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["list_of_universes", b"list_of_universes"]) -> None: ...

global___universes_list = universes_list

@typing_extensions.final
class request_universe_list(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    UNIVERSE_ID_FIELD_NUMBER: builtins.int
    universe_id: builtins.int
    """Request info about a specific configured"""
    def __init__(
        self,
        *,
        universe_id: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["universe_id", b"universe_id"]) -> None: ...

global___request_universe_list = request_universe_list

@typing_extensions.final
class delete_universe(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.int
    def __init__(
        self,
        *,
        id: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id"]) -> None: ...

global___delete_universe = delete_universe
