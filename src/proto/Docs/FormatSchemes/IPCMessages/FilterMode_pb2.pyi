"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _ShowFileApplyState:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ShowFileApplyStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ShowFileApplyState.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    SFAS_INVALID: _ShowFileApplyState.ValueType  # 0
    """No file loaded"""
    SFAS_SHOW_ACTIVE: _ShowFileApplyState.ValueType  # 1
    """A show file is loaded and no update is running"""
    SFAS_SHOW_LOADING: _ShowFileApplyState.ValueType  # 2
    """No show file is loaded but one is loading"""
    SFAS_SHOW_UPDATING: _ShowFileApplyState.ValueType  # 3
    """A show file is running and a new one is being loaded"""
    SFAS_NO_SHOW_ERROR: _ShowFileApplyState.ValueType  # 4
    """An error occured and there is currently no show file active"""
    SFAS_ERROR_SHOW_RUNNING: _ShowFileApplyState.ValueType  # 5
    """An error occured but the current show is still running"""

class ShowFileApplyState(_ShowFileApplyState, metaclass=_ShowFileApplyStateEnumTypeWrapper): ...

SFAS_INVALID: ShowFileApplyState.ValueType  # 0
"""No file loaded"""
SFAS_SHOW_ACTIVE: ShowFileApplyState.ValueType  # 1
"""A show file is loaded and no update is running"""
SFAS_SHOW_LOADING: ShowFileApplyState.ValueType  # 2
"""No show file is loaded but one is loading"""
SFAS_SHOW_UPDATING: ShowFileApplyState.ValueType  # 3
"""A show file is running and a new one is being loaded"""
SFAS_NO_SHOW_ERROR: ShowFileApplyState.ValueType  # 4
"""An error occured and there is currently no show file active"""
SFAS_ERROR_SHOW_RUNNING: ShowFileApplyState.ValueType  # 5
"""An error occured but the current show is still running"""
global___ShowFileApplyState = ShowFileApplyState

@typing_extensions.final
class enter_scene(google.protobuf.message.Message):
    """
    This file specifies messages and types used in filter mode.

    Tell Fish to enter a specific scene or be notified about a change of scene
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SCENE_ID_FIELD_NUMBER: builtins.int
    scene_id: builtins.int
    """The scene to load from the project file"""
    def __init__(
        self,
        *,
        scene_id: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["scene_id", b"scene_id"]) -> None: ...

global___enter_scene = enter_scene

@typing_extensions.final
class load_show_file(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SHOW_DATA_FIELD_NUMBER: builtins.int
    GOTO_DEFAULT_SCENE_FIELD_NUMBER: builtins.int
    show_data: builtins.str
    """The show file as XML data"""
    goto_default_scene: builtins.bool
    """Should the default scene be started if one is already loaded or should the current one be kept active"""
    def __init__(
        self,
        *,
        show_data: builtins.str = ...,
        goto_default_scene: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["goto_default_scene", b"goto_default_scene", "show_data", b"show_data"]) -> None: ...

global___load_show_file = load_show_file

@typing_extensions.final
class update_parameter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILTER_ID_FIELD_NUMBER: builtins.int
    PARAMETER_KEY_FIELD_NUMBER: builtins.int
    PARAMETER_VALUE_FIELD_NUMBER: builtins.int
    SCENE_ID_FIELD_NUMBER: builtins.int
    filter_id: builtins.str
    """The filter whose update_paramter method should be called"""
    parameter_key: builtins.str
    """The key of the parameter to update"""
    parameter_value: builtins.str
    """The value of the parameter to set"""
    scene_id: builtins.int
    """The scene where the filter is located"""
    def __init__(
        self,
        *,
        filter_id: builtins.str = ...,
        parameter_key: builtins.str = ...,
        parameter_value: builtins.str = ...,
        scene_id: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["filter_id", b"filter_id", "parameter_key", b"parameter_key", "parameter_value", b"parameter_value", "scene_id", b"scene_id"]) -> None: ...

global___update_parameter = update_parameter
