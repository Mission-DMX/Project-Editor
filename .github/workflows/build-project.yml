name: Build Python

on:
  workflow_call:

jobs:
  build-project:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      #- name: install cudnn
      #  run: |
      #    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.1-1_all.deb
      #    sudo dpkg -i cuda-keyring_1.1-1_all.deb
      #    sudo apt-get update

      - name: install lib
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libxcb-xinerama0 libxcb-keysyms1 libxcb-icccm4 libxcb-shape0 libxcb-render-util0 libxcb-cursor0 libxcb-xkb1 libxkbcommon-x11-0 libxcb-image0 #cuda nvidia-cuda-toolkit cudnn
          version: 1.0

      - name: Setup PDM
        uses: pdm-project/setup-pdm@v4
        with:
          cache: false
          python-version-file: pyproject.toml

      - name: Install dependencies
        run: pdm install --dev

      - name: Run update_version.py and capture output
        id: version_update
        run: |
          RELEASE_TAG=$(pdm run python update_version.py info)
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV

      - name: Build Python Executable
        run: |
          pdm run pyinstaller Project-Editor.spec

      - name: Upload Executable as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Project-Editor
          path: |
            dist/Project-Editor

      #- name: Create GitHub Release
      #  uses: softprops/action-gh-release@v1
      #  with:
      #    tag_name: ${{ env.RELEASE_TAG }}
      #    files: dist/Project-Editor
      #    generate_release_notes: true
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}